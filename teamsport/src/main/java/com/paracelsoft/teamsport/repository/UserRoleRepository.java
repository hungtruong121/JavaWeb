package com.paracelsoft.teamsport.repository;

import java.math.BigInteger;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.querydsl.QuerydslPredicateExecutor;
import org.springframework.stereotype.Repository;

import com.paracelsoft.teamsport.entity.UserRole;

/**
* Generated by Spring Data Generator on 16/03/2019
*/
@Repository
public interface UserRoleRepository extends JpaRepository<UserRole, BigInteger>, JpaSpecificationExecutor<UserRole>, QuerydslPredicateExecutor<UserRole> {

	UserRole findByUserRoleIdAndIsActive(BigInteger userId, int i);

	@Query(value ="SELECT * FROM user_role ur join user u on u.user_role_id = ur.user_role_id\r\n" + 
			"where u.user_id = :userId and u.is_active = :isActive and ur.is_active = :isActive", nativeQuery =  true)
	UserRole findByUserIdAndIsActive(BigInteger userId, int isActive);
	
}