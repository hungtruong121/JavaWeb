package com.paracelsoft.teamsport.repository;

import java.math.BigInteger;
import java.util.List;
import java.util.Map;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.querydsl.QuerydslPredicateExecutor;
import org.springframework.stereotype.Repository;

import com.paracelsoft.teamsport.entity.TeamMember;
import com.paracelsoft.teamsport.entity.TeamMemberPK;

/**
* Generated by Spring Data Generator on 16/03/2019
*/
@Repository
public interface TeamMemberRepository extends JpaRepository<TeamMember, TeamMemberPK>, JpaSpecificationExecutor<TeamMember>, QuerydslPredicateExecutor<TeamMember> {

	TeamMember findById_TeamIdAndId_UserIdAndIsActive(BigInteger teamId, BigInteger userId, int isActive);
	
	List<TeamMember> findById_TeamIdAndIsActive(BigInteger teamId, int isActive);
	
	@Query(value = "SELECT count(team_member_role) \r\n" + 
			"FROM team_member \r\n" + 
			"WHERE team_id = :teamId \r\n" + 
			"AND is_active = 1 \r\n" + 
			"AND team_member_role = :team_member_role", nativeQuery = true)
	int countAdmin(BigInteger teamId,String team_member_role);
	
	
	@Query(value="SELECT ifnull(u.user_id,'') as user_id, ifnull(u.user_avatar,'1') as user_avatar, ifnull(u.user_full_name,'') as user_full_name,ifnull(t.team_member_role,'') as team_member_role\r\n" + 
			"FROM user u join team_member t on u.user_id = t.user_id\r\n" + 
			"WHERE team_id = :teamId\r\n" + 
			"AND u.is_active = :isActive \r\n" + 
			"AND t.is_active = :isActive", nativeQuery = true)
	List<Map<String, Object>> findMemberTeam(BigInteger teamId,int isActive);

}